# 1이 될 때 까지
# 문제 : 어떠한 수 N이 1이 될 때 까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 한다. 단 두 번째 연산은 N이 K로 나누어 떨어질 때만 선택 할 수 있다.
# 1. N에서 1을 뺀다.
# 2. N을 K로 나눈다
# 예를 들어, N이 17, K가 4라고 가정하자. 이 때, 1번의 과정을 한 번 수행하면 N은 16이 된다. 이후에 2번의 과정을 두 번 수행하면 N은 1이 된다. 결과적으로 이 경우 전체 과정을 실행한 횟수는 3이 된다. 이는 N을 1로 만드는 최소 횟수이다.
# N과 K가 주어질때 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 최소 횟수를 구하는 프로그램을 작성하세요.

N = 25
K = 5
count = 0

result = 0

while True:
    target = (N//K)*K # N이 K로 나누어 떨어지는 수가 될 때까지 빼기 , 가장 가까운 K 수 찾기
    result += (N-target) # 연산을 하는 횟수, 1을 빼는 횟수
    N = target
    # N이 K보다 작을때(더이상 나눌 수 없을때) 반복문 탈출
    if N < K:
        break
    # K로 나누기
    result += 1
    N //= K

# 마지막으로 남은 수에 대하여 1씩 빼기, N이 1이 아닐경우
result += (N-1)
print(result)
